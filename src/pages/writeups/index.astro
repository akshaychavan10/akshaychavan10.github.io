---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';

const writeups = await getCollection('writeups');
const platforms = ['TryHackMe', 'HackTheBox', 'Other'];
const difficulties = ['Easy', 'Medium', 'Hard'];

const getColorForDifficulty = (difficulty: string) => {
  switch (difficulty) {
    case 'Easy': return 'bg-green-100 text-green-800';
    case 'Medium': return 'bg-yellow-100 text-yellow-800';
    case 'Hard': return 'bg-red-100 text-red-800';
    default: return 'bg-gray-100 text-gray-800';
  }
};

const getColorForPlatform = (platform: string) => {
  switch (platform) {
    case 'TryHackMe': return 'bg-red-100 text-red-800';
    case 'HackTheBox': return 'bg-green-100 text-green-800';
    case 'Other': return 'bg-blue-100 text-blue-800';
    default: return 'bg-gray-100 text-gray-800';
  }
};
---

<Layout title="CTF Writeups">
  <div class="max-w-7xl mx-auto py-12 px-4 sm:px-6 lg:px-8">
    <h1 class="text-3xl font-bold mb-8">CTF Writeups</h1>
    
    <div class="mb-8">
      <div class="flex flex-wrap gap-4">
        {platforms.map((platform) => (
          <a 
            href={`/writeups/${platform.toLowerCase()}`}
            class={`px-4 py-2 rounded-md ${getColorForPlatform(platform)} hover:opacity-90 transition-opacity`}
          >
            {platform}
          </a>
        ))}
      </div>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      {writeups.map((writeup) => (
        <a href={`/writeups/${writeup.data.platform.toLowerCase()}/${writeup.slug.split('/').pop()}`} class="block">
          <div class="bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow">
            <div class="p-6">
              <div class="flex justify-between items-start mb-4">
                <h2 class="text-xl font-semibold">{writeup.data.title}</h2>
                <span class={`px-2 py-1 rounded-md text-sm ${getColorForDifficulty(writeup.data.difficulty)}`}>
                  {writeup.data.difficulty}
                </span>
              </div>
              <span class={`inline-block px-2 py-1 rounded-md text-sm ${getColorForPlatform(writeup.data.platform)} mb-4`}>
                {writeup.data.platform}
              </span>
              <div class="flex flex-wrap gap-2">
                {writeup.data.tags?.map((tag) => (
                  <span class="px-2 py-1 bg-gray-100 text-gray-600 rounded-md text-sm">
                    {tag}
                  </span>
                ))}
              </div>
            </div>
          </div>
        </a>
      ))}
    </div>
  </div>
</Layout>